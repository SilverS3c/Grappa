apiVersion: apps/v1
kind: Deployment
metadata: {{ $fullname := printf "%s-%s-grafana" .Release.Name .Chart.Name | trunc 63 | trimSuffix "-" }}
  name: {{ $fullname }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    app: {{ .Values.GrafanaDeployment.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.GrafanaDeployment.name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Values.GrafanaDeployment.name }}
    spec:
      containers:
      - name: {{ .Values.GrafanaDeployment.name }}
        image: "{{ .Values.GrafanaDeployment.image }}"
        imagePullPolicy: IfNotPresent
        envFrom:
          - configMapRef:
              name: configmap-grafana
          - secretRef:
              name: secret-grafana
        ports:
        - containerPort: {{ .Values.GrafanaDeployment.service.port | int }}
        livenessProbe:
          initialDelaySeconds: 15
          httpGet:
              path: /robots.txt
              port: {{ .Values.GrafanaDeployment.service.targetPort | int }}
              scheme: HTTP
        readinessProbe:
          initialDelaySeconds: 15
          tcpSocket:
              port: {{ .Values.GrafanaDeployment.service.targetPort | int }}
        resources:
            limits:
                memory: "750Mi"
                cpu: "300m"
      - name: {{ .Values.Prometheus.name }}
        image: {{ .Values.Prometheus.image }}
        imagePullPolicy: IfNotPresent
        volumeMounts:
            - name: config-vol
              mountPath: /etc/prometheus
        ports:
        - containerPort: {{ .Values.Prometheus.service.port | int }}
        livenessProbe:
          httpGet:
              path: /
              port: {{ .Values.Prometheus.service.targetPort | int }}
              scheme: HTTP
        readinessProbe:
          tcpSocket:
              port: {{ .Values.Prometheus.service.targetPort | int }}
        resources:
            limits:
                memory: "400Mi"
                cpu: "200m"
      volumes:
        - name: config-vol
          configMap:
            name: configmap-prometheus
            items:
              - key: config
                path: prometheus.yml